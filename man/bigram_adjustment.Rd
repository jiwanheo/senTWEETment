% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_tidytext.R
\name{bigram_adjustment}
\alias{bigram_adjustment}
\title{Bigram negation adjustment}
\usage{
bigram_adjustment(lexicons, text_stripped, negation_words, stop_words)
}
\arguments{
\item{lexicons}{Lexicons to use, A named list of tibbles.}

\item{text_stripped}{Texts of tweets, processed in `produce_analysis_df`}

\item{negation_words}{Negation words to use from TweetAnalysis R6 class.
A tibble.}
}
\description{
Makes adjustments to assign a negative score to phrases like "I am not happy",
that would have gotten a positive score, had it not been adjusted (looking
at single word at a time).
}
\details{
Traditionally, a single word tokenization results in a single row of
"word to sentiment value" per word. This function tokenizes the texts with 2
words. Any token that has as the first word, a negative word per
`negation_words`, instead gets two rows. One with the full 2-word token, and
another row with the original word. The sentiment value of both rows is the
sentiment value of the original word multiplied by -1. Then both these rows
are appended to the 1-word-tokenized tibble, and are summed at the word/tweet
level, canceling out the original word's sentiment, and adding the bigram
sentiment. Since we are specifically looking only for the negative words,
stop words will exclude negation words.
}
